# Pode ser qualquer name.
name: ci-golang-workflow

# No "on" vamos dizer o evento que vai acionar nosso processo de CI.
# on: [push] , Inicialmente usamos o evento push mas após isso trocamos para 
# pull_request e podemos ver mais sobre os eventos no link:
# https://docs.github.com/pt/actions/learn-github-actions/events-that-trigger-workflows
on:
  pull_request:
    branches:
      - develop

jobs: 
  # check-application é o nome do nosso job, porém poderia ter qualquer outro nome.
  check-application: 
    # runs-on vai dizer em qual ambiente nós queremos rodar nossa aplicação.
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # os: [ubuntu-18.04, ubuntu-20.04]
        go: [1.14, 1.15]

    # steps são os passos que serão executados.
    steps: 
      # Essa Action pega os dados do meu repositório e baixa no meu ambiente, no meu caso, um
      # ubuntu na ultima versão. Para mais informações você pode consultar o repositório dessa
      # Action: https://github.com/actions/checkout
      - uses: actions/checkout@v2
      # Essa Action vai preparar o ambiente Go para que possamos executar nosso código, para
      # mais informações você pode acessar o repositório dessa Action:
      # https://github.com/actions/setup-go
      - uses: actions/setup-go@v2
        with: 
          # Estamos passando um parâmetro para nossa action "setup-go@v2". Estamos dizendo
          # qual versão do Go queremos utilizar.
          # Antes estavamos usando a versão fixa "go-version: 1.15", com o Strategy Matrix
          # podemos fazer o teste com varias versões diferentes.
          go-version: ${{ matrix.go }} # go-version: 1.15
      - run: go test
      - run: go run math.go

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: pedroaraujonogueira/fullcycle2.0-ci-go:latest
